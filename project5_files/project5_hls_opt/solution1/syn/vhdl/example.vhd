-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity example is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    A_TVALID : IN STD_LOGIC;
    A_TREADY : OUT STD_LOGIC;
    A_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    A_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    A_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    A_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    A_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    B_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_TVALID : OUT STD_LOGIC;
    B_TREADY : IN STD_LOGIC;
    B_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    B_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    B_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of example is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "example_example,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.222700,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=19277,HLS_SYN_LUT=19835,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal kernel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_1_reg_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal kernel_load_2_reg_361 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_3_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal kernel_load_4_reg_381 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_5_reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal kernel_load_6_reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_7_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal kernel_load_8_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_in_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal local_in_buffer_ce0 : STD_LOGIC;
    signal local_in_buffer_we0 : STD_LOGIC;
    signal local_in_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_in_buffer_ce1 : STD_LOGIC;
    signal local_in_buffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_out_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal local_out_buffer_ce0 : STD_LOGIC;
    signal local_out_buffer_we0 : STD_LOGIC;
    signal local_out_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_out_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_out_buffer_ce1 : STD_LOGIC;
    signal local_out_buffer_we1 : STD_LOGIC;
    signal kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce0 : STD_LOGIC;
    signal kernel_we0 : STD_LOGIC;
    signal kernel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce1 : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0 : STD_LOGIC;
    signal grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0 : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0 : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0 : STD_LOGIC;
    signal grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_convR_fu_234_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_in_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_in_buffer_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_we0 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_we1 : STD_LOGIC;
    signal grp_example_Pipeline_convR_fu_234_local_out_buffer_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID : STD_LOGIC;
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm_state3 : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ii_loc_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_loc_fu_96 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_loc_fu_92 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_user_V_loc_fu_88 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_id_V_loc_fu_84 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_loc_fu_80 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg : STD_LOGIC := '0';
    signal grp_example_Pipeline_convR_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal regslice_both_B_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal regslice_both_A_V_data_V_U_apdone_blk : STD_LOGIC;
    signal A_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal A_TVALID_int_regslice : STD_LOGIC;
    signal A_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_A_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal A_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_A_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal A_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_A_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_user_V_U_apdone_blk : STD_LOGIC;
    signal A_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_A_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_apdone_blk : STD_LOGIC;
    signal A_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_A_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_id_V_U_apdone_blk : STD_LOGIC;
    signal A_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_A_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal A_TDEST_int_regslice : STD_LOGIC_VECTOR (5 downto 0);
    signal regslice_both_A_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_dest_V_U_ack_in : STD_LOGIC;
    signal B_TVALID_int_regslice : STD_LOGIC;
    signal B_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_B_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component example_example_Pipeline_KENEL_INIT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        kernel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_ce0 : OUT STD_LOGIC;
        kernel_we0 : OUT STD_LOGIC;
        kernel_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_RECEIVING_INPUT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_TVALID : IN STD_LOGIC;
        A_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        A_TREADY : OUT STD_LOGIC;
        A_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        A_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        A_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        A_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        A_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        kernel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_ce0 : OUT STD_LOGIC;
        kernel_we0 : OUT STD_LOGIC;
        kernel_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        local_in_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_in_buffer_ce0 : OUT STD_LOGIC;
        local_in_buffer_we0 : OUT STD_LOGIC;
        local_in_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ii_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        ii_out_ap_vld : OUT STD_LOGIC;
        tmp_keep_V_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_keep_V_out_ap_vld : OUT STD_LOGIC;
        tmp_strb_V_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_strb_V_out_ap_vld : OUT STD_LOGIC;
        tmp_user_V_out : OUT STD_LOGIC_VECTOR (1 downto 0);
        tmp_user_V_out_ap_vld : OUT STD_LOGIC;
        tmp_id_V_out : OUT STD_LOGIC_VECTOR (4 downto 0);
        tmp_id_V_out_ap_vld : OUT STD_LOGIC;
        tmp_dest_V_out : OUT STD_LOGIC_VECTOR (5 downto 0);
        tmp_dest_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component example_example_Pipeline_Clear_dst IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        local_out_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_out_buffer_ce0 : OUT STD_LOGIC;
        local_out_buffer_we0 : OUT STD_LOGIC;
        local_out_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_convR IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        local_in_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_in_buffer_ce0 : OUT STD_LOGIC;
        local_in_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        local_in_buffer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_in_buffer_ce1 : OUT STD_LOGIC;
        local_in_buffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        local_out_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_out_buffer_ce0 : OUT STD_LOGIC;
        local_out_buffer_we0 : OUT STD_LOGIC;
        local_out_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        local_out_buffer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_out_buffer_ce1 : OUT STD_LOGIC;
        local_out_buffer_we1 : OUT STD_LOGIC;
        local_out_buffer_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_SENDING_OUTPUT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_TREADY : IN STD_LOGIC;
        local_out_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        local_out_buffer_ce0 : OUT STD_LOGIC;
        local_out_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln260 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_keep_V_reload : IN STD_LOGIC_VECTOR (3 downto 0);
        tmp_strb_V_reload : IN STD_LOGIC_VECTOR (3 downto 0);
        tmp_user_V_reload : IN STD_LOGIC_VECTOR (1 downto 0);
        tmp_id_V_reload : IN STD_LOGIC_VECTOR (4 downto 0);
        tmp_dest_V_reload : IN STD_LOGIC_VECTOR (5 downto 0);
        B_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_TVALID : OUT STD_LOGIC;
        B_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
        B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        B_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        B_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component example_local_in_buffer_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_local_out_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_kernel_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component example_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    local_in_buffer_U : component example_local_in_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => local_in_buffer_address0,
        ce0 => local_in_buffer_ce0,
        we0 => local_in_buffer_we0,
        d0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0,
        q0 => local_in_buffer_q0,
        address1 => grp_example_Pipeline_convR_fu_234_local_in_buffer_address1,
        ce1 => local_in_buffer_ce1,
        q1 => local_in_buffer_q1);

    local_out_buffer_U : component example_local_out_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => local_out_buffer_address0,
        ce0 => local_out_buffer_ce0,
        we0 => local_out_buffer_we0,
        d0 => local_out_buffer_d0,
        q0 => local_out_buffer_q0,
        address1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_address1,
        ce1 => local_out_buffer_ce1,
        we1 => local_out_buffer_we1,
        d1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_d1);

    kernel_U : component example_kernel_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => kernel_address0,
        ce0 => kernel_ce0,
        we0 => kernel_we0,
        d0 => kernel_d0,
        q0 => kernel_q0,
        address1 => kernel_address1,
        ce1 => kernel_ce1,
        q1 => kernel_q1);

    grp_example_Pipeline_KENEL_INIT_fu_197 : component example_example_Pipeline_KENEL_INIT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_KENEL_INIT_fu_197_ap_start,
        ap_done => grp_example_Pipeline_KENEL_INIT_fu_197_ap_done,
        ap_idle => grp_example_Pipeline_KENEL_INIT_fu_197_ap_idle,
        ap_ready => grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready,
        kernel_address0 => grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0,
        kernel_ce0 => grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0,
        kernel_we0 => grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0,
        kernel_d0 => grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0);

    grp_example_Pipeline_RECEIVING_INPUT_fu_203 : component example_example_Pipeline_RECEIVING_INPUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start,
        ap_done => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done,
        ap_idle => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_idle,
        ap_ready => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready,
        A_TVALID => A_TVALID_int_regslice,
        A_TDATA => A_TDATA_int_regslice,
        A_TREADY => grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY,
        A_TKEEP => A_TKEEP_int_regslice,
        A_TSTRB => A_TSTRB_int_regslice,
        A_TUSER => A_TUSER_int_regslice,
        A_TLAST => A_TLAST_int_regslice,
        A_TID => A_TID_int_regslice,
        A_TDEST => A_TDEST_int_regslice,
        kernel_address0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0,
        kernel_ce0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0,
        kernel_we0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0,
        kernel_d0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0,
        local_in_buffer_address0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0,
        local_in_buffer_ce0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0,
        local_in_buffer_we0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0,
        local_in_buffer_d0 => grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0,
        ii_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out,
        ii_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld,
        tmp_keep_V_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out,
        tmp_keep_V_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld,
        tmp_strb_V_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out,
        tmp_strb_V_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld,
        tmp_user_V_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out,
        tmp_user_V_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld,
        tmp_id_V_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out,
        tmp_id_V_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld,
        tmp_dest_V_out => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out,
        tmp_dest_V_out_ap_vld => grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld);

    grp_example_Pipeline_Clear_dst_fu_229 : component example_example_Pipeline_Clear_dst
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_Clear_dst_fu_229_ap_start,
        ap_done => grp_example_Pipeline_Clear_dst_fu_229_ap_done,
        ap_idle => grp_example_Pipeline_Clear_dst_fu_229_ap_idle,
        ap_ready => grp_example_Pipeline_Clear_dst_fu_229_ap_ready,
        local_out_buffer_address0 => grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0,
        local_out_buffer_ce0 => grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0,
        local_out_buffer_we0 => grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0,
        local_out_buffer_d0 => grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0);

    grp_example_Pipeline_convR_fu_234 : component example_example_Pipeline_convR
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_convR_fu_234_ap_start,
        ap_done => grp_example_Pipeline_convR_fu_234_ap_done,
        ap_idle => grp_example_Pipeline_convR_fu_234_ap_idle,
        ap_ready => grp_example_Pipeline_convR_fu_234_ap_ready,
        local_in_buffer_address0 => grp_example_Pipeline_convR_fu_234_local_in_buffer_address0,
        local_in_buffer_ce0 => grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0,
        local_in_buffer_q0 => local_in_buffer_q0,
        local_in_buffer_address1 => grp_example_Pipeline_convR_fu_234_local_in_buffer_address1,
        local_in_buffer_ce1 => grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1,
        local_in_buffer_q1 => local_in_buffer_q1,
        kernel_load_8 => kernel_load_8_reg_421,
        kernel_load => kernel_load_reg_346,
        kernel_load_1 => kernel_load_1_reg_356,
        kernel_load_7 => kernel_load_7_reg_416,
        kernel_load_2 => kernel_load_2_reg_361,
        kernel_load_3 => kernel_load_3_reg_376,
        kernel_load_6 => kernel_load_6_reg_401,
        kernel_load_4 => kernel_load_4_reg_381,
        kernel_load_5 => kernel_load_5_reg_396,
        local_out_buffer_address0 => grp_example_Pipeline_convR_fu_234_local_out_buffer_address0,
        local_out_buffer_ce0 => grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0,
        local_out_buffer_we0 => grp_example_Pipeline_convR_fu_234_local_out_buffer_we0,
        local_out_buffer_d0 => grp_example_Pipeline_convR_fu_234_local_out_buffer_d0,
        local_out_buffer_address1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_address1,
        local_out_buffer_ce1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1,
        local_out_buffer_we1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_we1,
        local_out_buffer_d1 => grp_example_Pipeline_convR_fu_234_local_out_buffer_d1);

    grp_example_Pipeline_SENDING_OUTPUT_fu_251 : component example_example_Pipeline_SENDING_OUTPUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start,
        ap_done => grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done,
        ap_idle => grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_idle,
        ap_ready => grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready,
        B_TREADY => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY,
        local_out_buffer_address0 => grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0,
        local_out_buffer_ce0 => grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0,
        local_out_buffer_q0 => local_out_buffer_q0,
        zext_ln260 => ii_loc_fu_100,
        tmp_keep_V_reload => tmp_keep_V_loc_fu_96,
        tmp_strb_V_reload => tmp_strb_V_loc_fu_92,
        tmp_user_V_reload => tmp_user_V_loc_fu_88,
        tmp_id_V_reload => tmp_id_V_loc_fu_84,
        tmp_dest_V_reload => tmp_dest_V_loc_fu_80,
        B_TDATA => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA,
        B_TVALID => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        B_TKEEP => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP,
        B_TSTRB => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB,
        B_TUSER => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER,
        B_TLAST => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST,
        B_TID => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID,
        B_TDEST => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST);

    control_s_axi_U : component example_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    regslice_both_A_V_data_V_U : component example_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TDATA,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_data_V_U_ack_in,
        data_out => A_TDATA_int_regslice,
        vld_out => A_TVALID_int_regslice,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_data_V_U_apdone_blk);

    regslice_both_A_V_keep_V_U : component example_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TKEEP,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_keep_V_U_ack_in,
        data_out => A_TKEEP_int_regslice,
        vld_out => regslice_both_A_V_keep_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_keep_V_U_apdone_blk);

    regslice_both_A_V_strb_V_U : component example_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TSTRB,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_strb_V_U_ack_in,
        data_out => A_TSTRB_int_regslice,
        vld_out => regslice_both_A_V_strb_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_strb_V_U_apdone_blk);

    regslice_both_A_V_user_V_U : component example_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TUSER,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_user_V_U_ack_in,
        data_out => A_TUSER_int_regslice,
        vld_out => regslice_both_A_V_user_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_user_V_U_apdone_blk);

    regslice_both_A_V_last_V_U : component example_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TLAST,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_last_V_U_ack_in,
        data_out => A_TLAST_int_regslice,
        vld_out => regslice_both_A_V_last_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_last_V_U_apdone_blk);

    regslice_both_A_V_id_V_U : component example_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TID,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_id_V_U_ack_in,
        data_out => A_TID_int_regslice,
        vld_out => regslice_both_A_V_id_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_id_V_U_apdone_blk);

    regslice_both_A_V_dest_V_U : component example_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TDEST,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_dest_V_U_ack_in,
        data_out => A_TDEST_int_regslice,
        vld_out => regslice_both_A_V_dest_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_dest_V_U_apdone_blk);

    regslice_both_B_V_data_V_U : component example_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => B_TREADY_int_regslice,
        data_out => B_TDATA,
        vld_out => regslice_both_B_V_data_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_data_V_U_apdone_blk);

    regslice_both_B_V_keep_V_U : component example_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_keep_V_U_ack_in_dummy,
        data_out => B_TKEEP,
        vld_out => regslice_both_B_V_keep_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_keep_V_U_apdone_blk);

    regslice_both_B_V_strb_V_U : component example_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_strb_V_U_ack_in_dummy,
        data_out => B_TSTRB,
        vld_out => regslice_both_B_V_strb_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_strb_V_U_apdone_blk);

    regslice_both_B_V_user_V_U : component example_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_user_V_U_ack_in_dummy,
        data_out => B_TUSER,
        vld_out => regslice_both_B_V_user_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_user_V_U_apdone_blk);

    regslice_both_B_V_last_V_U : component example_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_last_V_U_ack_in_dummy,
        data_out => B_TLAST,
        vld_out => regslice_both_B_V_last_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_last_V_U_apdone_blk);

    regslice_both_B_V_id_V_U : component example_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_id_V_U_ack_in_dummy,
        data_out => B_TID,
        vld_out => regslice_both_B_V_id_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_id_V_U_apdone_blk);

    regslice_both_B_V_dest_V_U : component example_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST,
        vld_in => grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID,
        ack_in => regslice_both_B_V_dest_V_U_ack_in_dummy,
        data_out => B_TDEST,
        vld_out => regslice_both_B_V_dest_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_Clear_dst_fu_229_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_convR_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_convR_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_example_Pipeline_convR_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_convR_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_convR_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld = ap_const_logic_1))) then
                ii_loc_fu_100 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                kernel_load_1_reg_356 <= kernel_q1;
                kernel_load_2_reg_361 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                kernel_load_3_reg_376 <= kernel_q0;
                kernel_load_4_reg_381 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                kernel_load_5_reg_396 <= kernel_q0;
                kernel_load_6_reg_401 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                kernel_load_7_reg_416 <= kernel_q0;
                kernel_load_8_reg_421 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                kernel_load_reg_346 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld = ap_const_logic_1))) then
                tmp_dest_V_loc_fu_80 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld = ap_const_logic_1))) then
                tmp_id_V_loc_fu_84 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld = ap_const_logic_1))) then
                tmp_keep_V_loc_fu_96 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld = ap_const_logic_1))) then
                tmp_strb_V_loc_fu_92 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld = ap_const_logic_1))) then
                tmp_user_V_loc_fu_88 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, grp_example_Pipeline_KENEL_INIT_fu_197_ap_done, grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done, grp_example_Pipeline_Clear_dst_fu_229_ap_done, grp_example_Pipeline_convR_fu_234_ap_done, grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, regslice_both_B_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_example_Pipeline_KENEL_INIT_fu_197_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_example_Pipeline_Clear_dst_fu_229_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_example_Pipeline_convR_fu_234_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    A_TREADY <= regslice_both_A_V_data_V_U_ack_in;

    A_TREADY_int_regslice_assign_proc : process(grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_TREADY_int_regslice <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY;
        else 
            A_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    B_TVALID <= regslice_both_B_V_data_V_U_vld_out;
    B_TVALID_int_regslice <= grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state3 <= ap_NS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_example_Pipeline_convR_fu_234_ap_done)
    begin
        if ((grp_example_Pipeline_convR_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done)
    begin
        if ((grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(regslice_both_B_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_example_Pipeline_KENEL_INIT_fu_197_ap_done)
    begin
        if ((grp_example_Pipeline_KENEL_INIT_fu_197_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done)
    begin
        if ((grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_example_Pipeline_Clear_dst_fu_229_ap_done)
    begin
        if ((grp_example_Pipeline_Clear_dst_fu_229_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state14, regslice_both_B_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state14, regslice_both_B_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_example_Pipeline_Clear_dst_fu_229_ap_start <= grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg;
    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start <= grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg;
    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg;
    grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY <= (ap_CS_fsm_state13 and B_TREADY_int_regslice);
    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start <= grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg;
    grp_example_Pipeline_convR_fu_234_ap_start <= grp_example_Pipeline_convR_fu_234_ap_start_reg;

    kernel_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0, grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            kernel_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kernel_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            kernel_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_address0 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            kernel_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            kernel_address0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_address0 <= grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0;
        else 
            kernel_address0 <= "XXXX";
        end if; 
    end process;


    kernel_address1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            kernel_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kernel_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            kernel_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        else 
            kernel_address1 <= "XXXX";
        end if; 
    end process;


    kernel_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0, grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0, grp_example_Pipeline_Clear_dst_fu_229_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_example_Pipeline_Clear_dst_fu_229_ap_done = ap_const_logic_1)))) then 
            kernel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            kernel_ce0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_ce0 <= grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_example_Pipeline_Clear_dst_fu_229_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_example_Pipeline_Clear_dst_fu_229_ap_done = ap_const_logic_1)))) then 
            kernel_ce1 <= ap_const_logic_1;
        else 
            kernel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_d0_assign_proc : process(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0, grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            kernel_d0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_d0 <= grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0;
        else 
            kernel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_we0_assign_proc : process(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0, grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            kernel_we0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_we0 <= grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0;
        else 
            kernel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_in_buffer_address0_assign_proc : process(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0, grp_example_Pipeline_convR_fu_234_local_in_buffer_address0, ap_CS_fsm_state4, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_in_buffer_address0 <= grp_example_Pipeline_convR_fu_234_local_in_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_in_buffer_address0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0;
        else 
            local_in_buffer_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    local_in_buffer_ce0_assign_proc : process(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0, grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0, ap_CS_fsm_state4, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_in_buffer_ce0 <= grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_in_buffer_ce0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0;
        else 
            local_in_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_in_buffer_ce1_assign_proc : process(grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_in_buffer_ce1 <= grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1;
        else 
            local_in_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_in_buffer_we0_assign_proc : process(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_in_buffer_we0 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0;
        else 
            local_in_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_out_buffer_address0_assign_proc : process(ap_CS_fsm_state6, grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0, grp_example_Pipeline_convR_fu_234_local_out_buffer_address0, grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            local_out_buffer_address0 <= grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_address0 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_out_buffer_address0 <= grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0;
        else 
            local_out_buffer_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    local_out_buffer_ce0_assign_proc : process(ap_CS_fsm_state6, grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0, grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0, grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            local_out_buffer_ce0 <= grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_ce0 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_out_buffer_ce0 <= grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0;
        else 
            local_out_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_out_buffer_ce1_assign_proc : process(grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_ce1 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1;
        else 
            local_out_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_out_buffer_d0_assign_proc : process(ap_CS_fsm_state6, grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0, grp_example_Pipeline_convR_fu_234_local_out_buffer_d0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_d0 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_out_buffer_d0 <= grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0;
        else 
            local_out_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    local_out_buffer_we0_assign_proc : process(ap_CS_fsm_state6, grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0, grp_example_Pipeline_convR_fu_234_local_out_buffer_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_we0 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_out_buffer_we0 <= grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0;
        else 
            local_out_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_out_buffer_we1_assign_proc : process(grp_example_Pipeline_convR_fu_234_local_out_buffer_we1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_out_buffer_we1 <= grp_example_Pipeline_convR_fu_234_local_out_buffer_we1;
        else 
            local_out_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
