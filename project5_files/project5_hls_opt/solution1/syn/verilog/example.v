// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="example_example,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.222700,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=19277,HLS_SYN_LUT=19835,HLS_VERSION=2021_2}" *)

module example (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        A_TDATA,
        A_TVALID,
        A_TREADY,
        A_TKEEP,
        A_TSTRB,
        A_TUSER,
        A_TLAST,
        A_TID,
        A_TDEST,
        B_TDATA,
        B_TVALID,
        B_TREADY,
        B_TKEEP,
        B_TSTRB,
        B_TUSER,
        B_TLAST,
        B_TID,
        B_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input  [31:0] A_TDATA;
input   A_TVALID;
output   A_TREADY;
input  [3:0] A_TKEEP;
input  [3:0] A_TSTRB;
input  [1:0] A_TUSER;
input  [0:0] A_TLAST;
input  [4:0] A_TID;
input  [5:0] A_TDEST;
output  [31:0] B_TDATA;
output   B_TVALID;
input   B_TREADY;
output  [3:0] B_TKEEP;
output  [3:0] B_TSTRB;
output  [1:0] B_TUSER;
output  [0:0] B_TLAST;
output  [4:0] B_TID;
output  [5:0] B_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [31:0] kernel_q0;
reg   [31:0] kernel_load_reg_346;
wire   [31:0] kernel_q1;
reg   [31:0] kernel_load_1_reg_356;
wire    ap_CS_fsm_state7;
reg   [31:0] kernel_load_2_reg_361;
reg   [31:0] kernel_load_3_reg_376;
wire    ap_CS_fsm_state8;
reg   [31:0] kernel_load_4_reg_381;
reg   [31:0] kernel_load_5_reg_396;
wire    ap_CS_fsm_state9;
reg   [31:0] kernel_load_6_reg_401;
reg   [31:0] kernel_load_7_reg_416;
wire    ap_CS_fsm_state10;
reg   [31:0] kernel_load_8_reg_421;
reg   [13:0] local_in_buffer_address0;
reg    local_in_buffer_ce0;
reg    local_in_buffer_we0;
wire   [31:0] local_in_buffer_q0;
reg    local_in_buffer_ce1;
wire   [31:0] local_in_buffer_q1;
reg   [13:0] local_out_buffer_address0;
reg    local_out_buffer_ce0;
reg    local_out_buffer_we0;
reg   [31:0] local_out_buffer_d0;
wire   [31:0] local_out_buffer_q0;
reg    local_out_buffer_ce1;
reg    local_out_buffer_we1;
reg   [3:0] kernel_address0;
reg    kernel_ce0;
reg    kernel_we0;
reg   [31:0] kernel_d0;
reg   [3:0] kernel_address1;
reg    kernel_ce1;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_ap_done;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_ap_idle;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready;
wire   [3:0] grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0;
wire    grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0;
wire   [31:0] grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_idle;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY;
wire   [3:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0;
wire   [31:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0;
wire   [13:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0;
wire   [31:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0;
wire   [31:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld;
wire   [3:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld;
wire   [3:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld;
wire   [1:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld;
wire   [4:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld;
wire   [5:0] grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out;
wire    grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld;
wire    grp_example_Pipeline_Clear_dst_fu_229_ap_start;
wire    grp_example_Pipeline_Clear_dst_fu_229_ap_done;
wire    grp_example_Pipeline_Clear_dst_fu_229_ap_idle;
wire    grp_example_Pipeline_Clear_dst_fu_229_ap_ready;
wire   [13:0] grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0;
wire    grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0;
wire    grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0;
wire   [31:0] grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0;
wire    grp_example_Pipeline_convR_fu_234_ap_start;
wire    grp_example_Pipeline_convR_fu_234_ap_done;
wire    grp_example_Pipeline_convR_fu_234_ap_idle;
wire    grp_example_Pipeline_convR_fu_234_ap_ready;
wire   [13:0] grp_example_Pipeline_convR_fu_234_local_in_buffer_address0;
wire    grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0;
wire   [13:0] grp_example_Pipeline_convR_fu_234_local_in_buffer_address1;
wire    grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1;
wire   [13:0] grp_example_Pipeline_convR_fu_234_local_out_buffer_address0;
wire    grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0;
wire    grp_example_Pipeline_convR_fu_234_local_out_buffer_we0;
wire   [31:0] grp_example_Pipeline_convR_fu_234_local_out_buffer_d0;
wire   [13:0] grp_example_Pipeline_convR_fu_234_local_out_buffer_address1;
wire    grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1;
wire    grp_example_Pipeline_convR_fu_234_local_out_buffer_we1;
wire   [31:0] grp_example_Pipeline_convR_fu_234_local_out_buffer_d1;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_idle;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY;
wire   [13:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0;
wire   [31:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA;
wire    grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID;
wire   [3:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP;
wire   [3:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB;
wire   [1:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER;
wire   [0:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST;
wire   [4:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID;
wire   [5:0] grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST;
reg    grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg;
reg   [13:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [31:0] ii_loc_fu_100;
reg   [3:0] tmp_keep_V_loc_fu_96;
reg   [3:0] tmp_strb_V_loc_fu_92;
reg   [1:0] tmp_user_V_loc_fu_88;
reg   [4:0] tmp_id_V_loc_fu_84;
reg   [5:0] tmp_dest_V_loc_fu_80;
reg    grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg;
reg    grp_example_Pipeline_convR_fu_234_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    regslice_both_B_V_data_V_U_apdone_blk;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    regslice_both_A_V_data_V_U_apdone_blk;
wire   [31:0] A_TDATA_int_regslice;
wire    A_TVALID_int_regslice;
reg    A_TREADY_int_regslice;
wire    regslice_both_A_V_data_V_U_ack_in;
wire    regslice_both_A_V_keep_V_U_apdone_blk;
wire   [3:0] A_TKEEP_int_regslice;
wire    regslice_both_A_V_keep_V_U_vld_out;
wire    regslice_both_A_V_keep_V_U_ack_in;
wire    regslice_both_A_V_strb_V_U_apdone_blk;
wire   [3:0] A_TSTRB_int_regslice;
wire    regslice_both_A_V_strb_V_U_vld_out;
wire    regslice_both_A_V_strb_V_U_ack_in;
wire    regslice_both_A_V_user_V_U_apdone_blk;
wire   [1:0] A_TUSER_int_regslice;
wire    regslice_both_A_V_user_V_U_vld_out;
wire    regslice_both_A_V_user_V_U_ack_in;
wire    regslice_both_A_V_last_V_U_apdone_blk;
wire   [0:0] A_TLAST_int_regslice;
wire    regslice_both_A_V_last_V_U_vld_out;
wire    regslice_both_A_V_last_V_U_ack_in;
wire    regslice_both_A_V_id_V_U_apdone_blk;
wire   [4:0] A_TID_int_regslice;
wire    regslice_both_A_V_id_V_U_vld_out;
wire    regslice_both_A_V_id_V_U_ack_in;
wire    regslice_both_A_V_dest_V_U_apdone_blk;
wire   [5:0] A_TDEST_int_regslice;
wire    regslice_both_A_V_dest_V_U_vld_out;
wire    regslice_both_A_V_dest_V_U_ack_in;
wire    B_TVALID_int_regslice;
wire    B_TREADY_int_regslice;
wire    regslice_both_B_V_data_V_U_vld_out;
wire    regslice_both_B_V_keep_V_U_apdone_blk;
wire    regslice_both_B_V_keep_V_U_ack_in_dummy;
wire    regslice_both_B_V_keep_V_U_vld_out;
wire    regslice_both_B_V_strb_V_U_apdone_blk;
wire    regslice_both_B_V_strb_V_U_ack_in_dummy;
wire    regslice_both_B_V_strb_V_U_vld_out;
wire    regslice_both_B_V_user_V_U_apdone_blk;
wire    regslice_both_B_V_user_V_U_ack_in_dummy;
wire    regslice_both_B_V_user_V_U_vld_out;
wire    regslice_both_B_V_last_V_U_apdone_blk;
wire    regslice_both_B_V_last_V_U_ack_in_dummy;
wire    regslice_both_B_V_last_V_U_vld_out;
wire    regslice_both_B_V_id_V_U_apdone_blk;
wire    regslice_both_B_V_id_V_U_ack_in_dummy;
wire    regslice_both_B_V_id_V_U_vld_out;
wire    regslice_both_B_V_dest_V_U_apdone_blk;
wire    regslice_both_B_V_dest_V_U_ack_in_dummy;
wire    regslice_both_B_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg = 1'b0;
#0 grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg = 1'b0;
#0 grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg = 1'b0;
#0 grp_example_Pipeline_convR_fu_234_ap_start_reg = 1'b0;
#0 grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg = 1'b0;
end

example_local_in_buffer_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16000 ),
    .AddressWidth( 14 ))
local_in_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_in_buffer_address0),
    .ce0(local_in_buffer_ce0),
    .we0(local_in_buffer_we0),
    .d0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0),
    .q0(local_in_buffer_q0),
    .address1(grp_example_Pipeline_convR_fu_234_local_in_buffer_address1),
    .ce1(local_in_buffer_ce1),
    .q1(local_in_buffer_q1)
);

example_local_out_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16000 ),
    .AddressWidth( 14 ))
local_out_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_out_buffer_address0),
    .ce0(local_out_buffer_ce0),
    .we0(local_out_buffer_we0),
    .d0(local_out_buffer_d0),
    .q0(local_out_buffer_q0),
    .address1(grp_example_Pipeline_convR_fu_234_local_out_buffer_address1),
    .ce1(local_out_buffer_ce1),
    .we1(local_out_buffer_we1),
    .d1(grp_example_Pipeline_convR_fu_234_local_out_buffer_d1)
);

example_kernel_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_address0),
    .ce0(kernel_ce0),
    .we0(kernel_we0),
    .d0(kernel_d0),
    .q0(kernel_q0),
    .address1(kernel_address1),
    .ce1(kernel_ce1),
    .q1(kernel_q1)
);

example_example_Pipeline_KENEL_INIT grp_example_Pipeline_KENEL_INIT_fu_197(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_example_Pipeline_KENEL_INIT_fu_197_ap_start),
    .ap_done(grp_example_Pipeline_KENEL_INIT_fu_197_ap_done),
    .ap_idle(grp_example_Pipeline_KENEL_INIT_fu_197_ap_idle),
    .ap_ready(grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready),
    .kernel_address0(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0),
    .kernel_ce0(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0),
    .kernel_we0(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0),
    .kernel_d0(grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0)
);

example_example_Pipeline_RECEIVING_INPUT grp_example_Pipeline_RECEIVING_INPUT_fu_203(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start),
    .ap_done(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done),
    .ap_idle(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_idle),
    .ap_ready(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready),
    .A_TVALID(A_TVALID_int_regslice),
    .A_TDATA(A_TDATA_int_regslice),
    .A_TREADY(grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY),
    .A_TKEEP(A_TKEEP_int_regslice),
    .A_TSTRB(A_TSTRB_int_regslice),
    .A_TUSER(A_TUSER_int_regslice),
    .A_TLAST(A_TLAST_int_regslice),
    .A_TID(A_TID_int_regslice),
    .A_TDEST(A_TDEST_int_regslice),
    .kernel_address0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0),
    .kernel_ce0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0),
    .kernel_we0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0),
    .kernel_d0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0),
    .local_in_buffer_address0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0),
    .local_in_buffer_ce0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0),
    .local_in_buffer_we0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0),
    .local_in_buffer_d0(grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_d0),
    .ii_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out),
    .ii_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld),
    .tmp_keep_V_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out),
    .tmp_keep_V_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld),
    .tmp_strb_V_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out),
    .tmp_strb_V_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld),
    .tmp_user_V_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out),
    .tmp_user_V_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld),
    .tmp_id_V_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out),
    .tmp_id_V_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld),
    .tmp_dest_V_out(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out),
    .tmp_dest_V_out_ap_vld(grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld)
);

example_example_Pipeline_Clear_dst grp_example_Pipeline_Clear_dst_fu_229(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_example_Pipeline_Clear_dst_fu_229_ap_start),
    .ap_done(grp_example_Pipeline_Clear_dst_fu_229_ap_done),
    .ap_idle(grp_example_Pipeline_Clear_dst_fu_229_ap_idle),
    .ap_ready(grp_example_Pipeline_Clear_dst_fu_229_ap_ready),
    .local_out_buffer_address0(grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0),
    .local_out_buffer_ce0(grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0),
    .local_out_buffer_we0(grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0),
    .local_out_buffer_d0(grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0)
);

example_example_Pipeline_convR grp_example_Pipeline_convR_fu_234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_example_Pipeline_convR_fu_234_ap_start),
    .ap_done(grp_example_Pipeline_convR_fu_234_ap_done),
    .ap_idle(grp_example_Pipeline_convR_fu_234_ap_idle),
    .ap_ready(grp_example_Pipeline_convR_fu_234_ap_ready),
    .local_in_buffer_address0(grp_example_Pipeline_convR_fu_234_local_in_buffer_address0),
    .local_in_buffer_ce0(grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0),
    .local_in_buffer_q0(local_in_buffer_q0),
    .local_in_buffer_address1(grp_example_Pipeline_convR_fu_234_local_in_buffer_address1),
    .local_in_buffer_ce1(grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1),
    .local_in_buffer_q1(local_in_buffer_q1),
    .kernel_load_8(kernel_load_8_reg_421),
    .kernel_load(kernel_load_reg_346),
    .kernel_load_1(kernel_load_1_reg_356),
    .kernel_load_7(kernel_load_7_reg_416),
    .kernel_load_2(kernel_load_2_reg_361),
    .kernel_load_3(kernel_load_3_reg_376),
    .kernel_load_6(kernel_load_6_reg_401),
    .kernel_load_4(kernel_load_4_reg_381),
    .kernel_load_5(kernel_load_5_reg_396),
    .local_out_buffer_address0(grp_example_Pipeline_convR_fu_234_local_out_buffer_address0),
    .local_out_buffer_ce0(grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0),
    .local_out_buffer_we0(grp_example_Pipeline_convR_fu_234_local_out_buffer_we0),
    .local_out_buffer_d0(grp_example_Pipeline_convR_fu_234_local_out_buffer_d0),
    .local_out_buffer_address1(grp_example_Pipeline_convR_fu_234_local_out_buffer_address1),
    .local_out_buffer_ce1(grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1),
    .local_out_buffer_we1(grp_example_Pipeline_convR_fu_234_local_out_buffer_we1),
    .local_out_buffer_d1(grp_example_Pipeline_convR_fu_234_local_out_buffer_d1)
);

example_example_Pipeline_SENDING_OUTPUT grp_example_Pipeline_SENDING_OUTPUT_fu_251(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start),
    .ap_done(grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done),
    .ap_idle(grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_idle),
    .ap_ready(grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready),
    .B_TREADY(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY),
    .local_out_buffer_address0(grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0),
    .local_out_buffer_ce0(grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0),
    .local_out_buffer_q0(local_out_buffer_q0),
    .zext_ln260(ii_loc_fu_100),
    .tmp_keep_V_reload(tmp_keep_V_loc_fu_96),
    .tmp_strb_V_reload(tmp_strb_V_loc_fu_92),
    .tmp_user_V_reload(tmp_user_V_loc_fu_88),
    .tmp_id_V_reload(tmp_id_V_loc_fu_84),
    .tmp_dest_V_reload(tmp_dest_V_loc_fu_80),
    .B_TDATA(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA),
    .B_TVALID(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .B_TKEEP(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP),
    .B_TSTRB(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB),
    .B_TUSER(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER),
    .B_TLAST(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST),
    .B_TID(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID),
    .B_TDEST(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST)
);

example_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

example_regslice_both #(
    .DataWidth( 32 ))
regslice_both_A_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TDATA),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_data_V_U_ack_in),
    .data_out(A_TDATA_int_regslice),
    .vld_out(A_TVALID_int_regslice),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_data_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 4 ))
regslice_both_A_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TKEEP),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_keep_V_U_ack_in),
    .data_out(A_TKEEP_int_regslice),
    .vld_out(regslice_both_A_V_keep_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_keep_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 4 ))
regslice_both_A_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TSTRB),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_strb_V_U_ack_in),
    .data_out(A_TSTRB_int_regslice),
    .vld_out(regslice_both_A_V_strb_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_strb_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 2 ))
regslice_both_A_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TUSER),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_user_V_U_ack_in),
    .data_out(A_TUSER_int_regslice),
    .vld_out(regslice_both_A_V_user_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_user_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 1 ))
regslice_both_A_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TLAST),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_last_V_U_ack_in),
    .data_out(A_TLAST_int_regslice),
    .vld_out(regslice_both_A_V_last_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_last_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 5 ))
regslice_both_A_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TID),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_id_V_U_ack_in),
    .data_out(A_TID_int_regslice),
    .vld_out(regslice_both_A_V_id_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_id_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 6 ))
regslice_both_A_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TDEST),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_dest_V_U_ack_in),
    .data_out(A_TDEST_int_regslice),
    .vld_out(regslice_both_A_V_dest_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_dest_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 32 ))
regslice_both_B_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDATA),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(B_TREADY_int_regslice),
    .data_out(B_TDATA),
    .vld_out(regslice_both_B_V_data_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_data_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 4 ))
regslice_both_B_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TKEEP),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_keep_V_U_ack_in_dummy),
    .data_out(B_TKEEP),
    .vld_out(regslice_both_B_V_keep_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_keep_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 4 ))
regslice_both_B_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TSTRB),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_strb_V_U_ack_in_dummy),
    .data_out(B_TSTRB),
    .vld_out(regslice_both_B_V_strb_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_strb_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 2 ))
regslice_both_B_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TUSER),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_user_V_U_ack_in_dummy),
    .data_out(B_TUSER),
    .vld_out(regslice_both_B_V_user_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_user_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 1 ))
regslice_both_B_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TLAST),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_last_V_U_ack_in_dummy),
    .data_out(B_TLAST),
    .vld_out(regslice_both_B_V_last_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_last_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 5 ))
regslice_both_B_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TID),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_id_V_U_ack_in_dummy),
    .data_out(B_TID),
    .vld_out(regslice_both_B_V_id_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_id_V_U_apdone_blk)
);

example_regslice_both #(
    .DataWidth( 6 ))
regslice_both_B_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TDEST),
    .vld_in(grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID),
    .ack_in(regslice_both_B_V_dest_V_U_ack_in_dummy),
    .data_out(B_TDEST),
    .vld_out(regslice_both_B_V_dest_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= 1'b1;
        end else if ((grp_example_Pipeline_Clear_dst_fu_229_ap_ready == 1'b1)) begin
            grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= 1'b1;
        end else if ((grp_example_Pipeline_KENEL_INIT_fu_197_ap_ready == 1'b1)) begin
            grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= 1'b1;
        end else if ((grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_ready == 1'b1)) begin
            grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= 1'b1;
        end else if ((grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_ready == 1'b1)) begin
            grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_example_Pipeline_convR_fu_234_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_example_Pipeline_convR_fu_234_ap_start_reg <= 1'b1;
        end else if ((grp_example_Pipeline_convR_fu_234_ap_ready == 1'b1)) begin
            grp_example_Pipeline_convR_fu_234_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out_ap_vld == 1'b1))) begin
        ii_loc_fu_100 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_ii_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        kernel_load_1_reg_356 <= kernel_q1;
        kernel_load_2_reg_361 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        kernel_load_3_reg_376 <= kernel_q0;
        kernel_load_4_reg_381 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_load_5_reg_396 <= kernel_q0;
        kernel_load_6_reg_401 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        kernel_load_7_reg_416 <= kernel_q0;
        kernel_load_8_reg_421 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_load_reg_346 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out_ap_vld == 1'b1))) begin
        tmp_dest_V_loc_fu_80 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_dest_V_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out_ap_vld == 1'b1))) begin
        tmp_id_V_loc_fu_84 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_id_V_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out_ap_vld == 1'b1))) begin
        tmp_keep_V_loc_fu_96 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_keep_V_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out_ap_vld == 1'b1))) begin
        tmp_strb_V_loc_fu_92 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_strb_V_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out_ap_vld == 1'b1))) begin
        tmp_user_V_loc_fu_88 <= grp_example_Pipeline_RECEIVING_INPUT_fu_203_tmp_user_V_out;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_TREADY_int_regslice = grp_example_Pipeline_RECEIVING_INPUT_fu_203_A_TREADY;
    end else begin
        A_TREADY_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_example_Pipeline_convR_fu_234_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_B_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_example_Pipeline_KENEL_INIT_fu_197_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_example_Pipeline_Clear_dst_fu_229_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (regslice_both_B_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (regslice_both_B_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        kernel_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        kernel_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_address0 = grp_example_Pipeline_KENEL_INIT_fu_197_kernel_address0;
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        kernel_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        kernel_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address1 = 64'd2;
    end else begin
        kernel_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (grp_example_Pipeline_Clear_dst_fu_229_ap_done == 1'b1)))) begin
        kernel_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_ce0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_ce0 = grp_example_Pipeline_KENEL_INIT_fu_197_kernel_ce0;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (grp_example_Pipeline_Clear_dst_fu_229_ap_done == 1'b1)))) begin
        kernel_ce1 = 1'b1;
    end else begin
        kernel_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_d0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_d0 = grp_example_Pipeline_KENEL_INIT_fu_197_kernel_d0;
    end else begin
        kernel_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_we0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_kernel_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_we0 = grp_example_Pipeline_KENEL_INIT_fu_197_kernel_we0;
    end else begin
        kernel_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_in_buffer_address0 = grp_example_Pipeline_convR_fu_234_local_in_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        local_in_buffer_address0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_address0;
    end else begin
        local_in_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_in_buffer_ce0 = grp_example_Pipeline_convR_fu_234_local_in_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        local_in_buffer_ce0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_ce0;
    end else begin
        local_in_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_in_buffer_ce1 = grp_example_Pipeline_convR_fu_234_local_in_buffer_ce1;
    end else begin
        local_in_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        local_in_buffer_we0 = grp_example_Pipeline_RECEIVING_INPUT_fu_203_local_in_buffer_we0;
    end else begin
        local_in_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        local_out_buffer_address0 = grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_address0 = grp_example_Pipeline_convR_fu_234_local_out_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_out_buffer_address0 = grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_address0;
    end else begin
        local_out_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        local_out_buffer_ce0 = grp_example_Pipeline_SENDING_OUTPUT_fu_251_local_out_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_ce0 = grp_example_Pipeline_convR_fu_234_local_out_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_out_buffer_ce0 = grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_ce0;
    end else begin
        local_out_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_ce1 = grp_example_Pipeline_convR_fu_234_local_out_buffer_ce1;
    end else begin
        local_out_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_d0 = grp_example_Pipeline_convR_fu_234_local_out_buffer_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_out_buffer_d0 = grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_d0;
    end else begin
        local_out_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_we0 = grp_example_Pipeline_convR_fu_234_local_out_buffer_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_out_buffer_we0 = grp_example_Pipeline_Clear_dst_fu_229_local_out_buffer_we0;
    end else begin
        local_out_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_out_buffer_we1 = grp_example_Pipeline_convR_fu_234_local_out_buffer_we1;
    end else begin
        local_out_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_example_Pipeline_KENEL_INIT_fu_197_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_example_Pipeline_Clear_dst_fu_229_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_example_Pipeline_convR_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (regslice_both_B_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_TREADY = regslice_both_A_V_data_V_U_ack_in;

assign B_TVALID = regslice_both_B_V_data_V_U_vld_out;

assign B_TVALID_int_regslice = grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TVALID;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_example_Pipeline_Clear_dst_fu_229_ap_start = grp_example_Pipeline_Clear_dst_fu_229_ap_start_reg;

assign grp_example_Pipeline_KENEL_INIT_fu_197_ap_start = grp_example_Pipeline_KENEL_INIT_fu_197_ap_start_reg;

assign grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start = grp_example_Pipeline_RECEIVING_INPUT_fu_203_ap_start_reg;

assign grp_example_Pipeline_SENDING_OUTPUT_fu_251_B_TREADY = (ap_CS_fsm_state13 & B_TREADY_int_regslice);

assign grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start = grp_example_Pipeline_SENDING_OUTPUT_fu_251_ap_start_reg;

assign grp_example_Pipeline_convR_fu_234_ap_start = grp_example_Pipeline_convR_fu_234_ap_start_reg;

endmodule //example
